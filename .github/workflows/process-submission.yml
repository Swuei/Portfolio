name: Process Download Entry
on:
  repository_dispatch:
    types: [update_downloads]

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
            
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Process entry
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          ENTRY="<!-- Self Note: When adding new products start from here -->
          <div class=\"download-item\">
            <div class=\"download-item-header\">
              <h4>${{ github.event.client_payload.name }}</h4>
              <span class=\"download-item-count\" data-counter=\"${{ github.event.client_payload.counterName}}\">
                <i class=\"fas fa-download\"></i> <span>0</span>
              </span>
            </div>
            <div class=\"download-links\">
              <a href=\"${{ github.event.client_payload.mediafireLink }}\" 
                 class=\"download-btn\" 
                 target=\"_blank\" 
                 data-download=\"true\" 
                 onclick=\"trackDownload(event, '${{ github.event.client_payload.counterName}}')\">
                <i class=\"fas fa-file-archive\"></i> Download ZIP
              </a>
              <a href=\"${{ github.event.client_payload.sketchfabLink }}\" 
                 class=\"download-btn\" 
                 target=\"_blank\">
                <i class=\"fas fa-eye\"></i> Preview
              </a>
            </div>
            <div class=\"download-meta\">
              <span><i class=\"fas fa-file-archive\"></i> ${{ github.event.client_payload.fileSize }}</span>
              <span><i class=\"fas fa-cube\"></i> ${{ github.event.client_payload.modelCount }}</span>
              <span><i class=\"fas fa-calendar-alt\"></i> ${{ github.event.client_payload.uploadDate }}</span>
            </div>
          </div>"
          
          python3 -c "
          from bs4 import BeautifulSoup
          import re
          
          target_page = '${{ github.event.client_payload.targetPage }}'
          
          with open(target_page, 'r') as f:
              soup = BeautifulSoup(f, 'html.parser')
              
          download_column = soup.find('div', class_='download-column')
          
          if download_column:
              new_entry = BeautifulSoup('$ENTRY', 'html.parser')
              
              download_column.insert(0, new_entry)
              
              with open(target_page, 'w', encoding='utf-8') as f:
                  f.write(str(soup))
          else:
              print('Could not find download-column div')
              exit(1)
          "

      - name: Install Python dependencies
        run: pip install beautifulsoup4

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Add new download entry for ${{ github.event.client_payload.name }}"
          git push
