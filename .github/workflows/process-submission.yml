name: Process Download Entry
on:
  repository_dispatch:
    types: [update_downloads]

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4

      - name: Create processing script
        run: |
          cat << 'EOF' > process_entry.py
          import json
          from bs4 import BeautifulSoup

          def main():
              try:
                  with open('payload.json') as f:
                      payload = json.load(f)

                  target_page = payload['targetPage']
                  with open(target_page, 'r', encoding='utf-8') as f:
                      soup = BeautifulSoup(f, 'html.parser')

                  columns = soup.find_all('div', class_='download-column')
                  if len(columns) < 2:
                      raise RuntimeError(f"Expected at least 2 'download-column' divs, found {len(columns)}")

                  left, right = columns[:2]
                  left_count = len(left.find_all('div', class_='download-item'))
                  right_count = len(right.find_all('div', class_='download-item'))
                  target_column = left if left_count <= right_count else right

                  new_entry = f\"\"\"
          <div class="download-item">
              <div class="download-item-header">
                  <h4>{payload["name"]}</h4>
                  <span class="download-item-count" data-counter="{payload["counterName"]}">
                      <i class="fas fa-download"></i> <span>0</span>
                  </span>
              </div>
              <div class="download-links">
                  <a href="{payload["mediafireLink"]}" class="download-btn" target="_blank" data-download="true">
                      <i class="fas fa-file-archive"></i> Download ZIP
                  </a>
                  <a href="{payload["sketchfabLink"]}" class="download-btn" target="_blank">
                      <i class="fas fa-eye"></i> Preview
                  </a>
              </div>
              <div class="download-meta">
                  <span><i class="fas fa-file-archive"></i> {payload["fileSize"]}</span>
                  <span><i class="fas fa-cube"></i> {payload["modelCount"]}</span>
                  <span><i class="fas fa-calendar-alt"></i> {payload["uploadDate"]}</span>
              </div>
          </div>
          \"\"\"

                  target_column.insert(0, BeautifulSoup(new_entry, 'html.parser'))

                  with open(target_page, 'w', encoding='utf-8') as f:
                      f.write(str(soup))

                  print(f"✅ Entry added to {'left' if target_column == left else 'right'} column in {target_page}")
                  return 0

              except Exception as e:
                  print(f"❌ Error processing entry: {e}")
                  return 1

          if __name__ == '__main__':
              exit(main())
          EOF


      - name: Prepare payload and run script
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          jq -n \
            --arg name "${{ github.event.client_payload.name }}" \
            --arg sketchfab "${{ github.event.client_payload.sketchfabLink }}" \
            --arg mediafire "${{ github.event.client_payload.mediafireLink }}" \
            --arg counter "${{ github.event.client_payload.counterName }}" \
            --arg size "${{ github.event.client_payload.fileSize }}" \
            --arg models "${{ github.event.client_payload.modelCount }}" \
            --arg date "${{ github.event.client_payload.uploadDate }}" \
            --arg page "${{ github.event.client_payload.targetPage }}" \
            '{name: $name, sketchfabLink: $sketchfab, mediafireLink: $mediafire, counterName: $counter, fileSize: $size, modelCount: $models, uploadDate: $date, targetPage: $page}' > payload.json

          python3 process_entry.py || exit 1

      - name: Show updated HTML (last 30 lines)
        run: |
          echo "--- Final lines of modified file ---"
          tail -n 30 downloads2.html || echo "⚠️ Could not read file"

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git diff-index --quiet HEAD || git commit -m "Add new download entry for ${{ github.event.client_payload.name }}"
          git push || echo "⚠️ Push failed or no changes to push"
